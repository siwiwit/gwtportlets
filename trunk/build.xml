<!--
  ~ GWT Portlets Framework (http://code.google.com/p/gwtportlets/)
  ~ Copyright 2009 Business Systems Group (Africa)
  ~
  ~ This file is part of GWT Portlets.
  ~
  ~ GWT Portlets is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Lesser General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ GWT Portlets is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public License
  ~ along with GWT Portlets.  If not, see <http://www.gnu.org/licenses/>.
  -->

<!--

GWT Portlets is packaged with binaries i.e. there is a gwt-portlets.jar in
the root of the project.

Running the demos:

Create a file called build.properties in the root of this project by copying
and customizing build.properties.sample. This indicates the locations of your
GWT installation and of Tomcat.

Then run "ant" (no args) to copy build.properties and required jar files to
the demos.

Each demo has its own build.xml.

Build instructions:

Run "ant -p" in the root of this project to see available targets.

-->
<project name="gwtportlets" default="copy-files-to-demos" basedir=".">

    <property file="build.properties" />
    <property name="release" value="0.0"/>
    <property name="gwt.sdk" value=""/>
    <property name="fop.home" value=""/>
    <property name="classes" value="build/classes"/>

    <!-- jars from lib that are copied to each demo -->
    <property name="lib.jars" value="**/log4j*.jar,**/xmlpull*.jar,**/xpp3*.jar,**/xstream*.jar"/>

    <path id="cp">
        <fileset dir="lib-build" includes="*.jar"/>
        <fileset dir="lib" includes="${lib.jars}"/>
        <fileset dir="${gwt.sdk}" includes="gwt-user.jar,gwt-servlet.jar,gwt-dev*.jar"/>
    </path>

    <tstamp>
        <format property="TODAY" pattern="dd MMMM yyyy"/> 
    </tstamp>

    <target name="clean" description="Nuke all generated files">
        <delete dir="build"/>
        <delete dir="." includes="gwt-portlets.jar"/>
        <delete dir="demos" includes="**/gwt-portlets.jar,${lib.jars}"/>
        <ant dir="demos/main" target="clean" inheritall="false"/>
    </target>

    <target name="javac" depends="check-props">
        <mkdir dir="${classes}"/>
        <javac srcdir="src" destdir="${classes}" debug="true" source="1.5"
               target="1.5" classpathref="cp"/>
        <copy todir="${classes}" verbose="false">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>

    <target name="jar" depends="javac"
            description="Create gwt-portlets.jar">
        <jar destfile="gwt-portlets.jar">
            <fileset dir="${classes}"/>
            <fileset dir="src" includes="**/*.java"/>
        </jar>
    </target>

    <target name="copy-files-to-demos" description="Copy jar and other files to demos">
        <copy todir="demos/main" file="build.properties"/>
        <copy todir="demos/main">
            <fileset dir="." includes="lib-hosted/**"/>
        </copy>
        <copy todir="demos/main/war/WEB-INF/lib">
            <fileset dir="." includes="gwt-portlets.jar"/>
            <fileset dir="lib" includes="${lib.jars}"/>
        </copy>
    </target>

    <target name="hosted" description="Run main demo in hosted mode"
            depends="jar,copy-files-to-demos">
        <ant dir="demos/main" target="hosted" inheritAll="false"/>
    </target>

    <target name="hosted-noserver" description="Run main demo in hosted mode with -noserver"
            depends="jar,copy-files-to-demos">
        <ant dir="demos/main" target="hosted-noserver" inheritAll="false"/>
    </target>

    <target name="deploy" description="Deploy main demo to Tomcat"
            depends="jar,copy-files-to-demos">
        <ant dir="demos/main" target="deploy" inheritAll="false"/>
    </target>

    <target name="dist" description="Create the download bundle"
            depends="clean, jar, manual-html, manual-pdf">
        <property name="dist" value="gwt-portlets-${release}"/>
        <mkdir dir="build/${dist}"/>
        <copy todir="build/${dist}">
            <fileset dir="."
                includes="gwt-portlets.jar,etc/**,lib*/**,src/**,demos/**,*.xml,*.txt,*.sample"
                excludes="**/build.properties,**/*.iml,**/*.iws,**/lib-hosted/**"/>
        </copy>
        <copy todir="build/${dist}">
            <fileset dir="." includes="lib-hosted/**"/>
        </copy>
        <mkdir dir="build/${dist}/doc"/>
        <copy todir="build/${dist}/doc">
            <fileset dir="build/doc" includes="manual.pdf,manual.html,*.css,img/**" />
        </copy>
        <move file="build/${dist}/build.properties.sample"
                tofile="build/${dist}/build.properties"/>
        <fixcrlf srcdir="build/${dist}" eol="crlf"
                 includes="**/*.txt,**/*.java,**/*.properties,**/*.jsp,**/*.html,**/*.css"/>
        <zip destfile="build/${dist}.zip" basedir="build" includes="${dist}/**"/>
    </target>

    <target name="javadoc" description="Generate build/javadoc.zip">
        <javadoc packagenames="org.gwtportlets.portlet.*"
                sourcepath="src"
                destdir="build/javadoc"
                use="true" classpathref="cp">
            <header><![CDATA[GWT Portlets Framework ${release}<br><a href="http://code.google.com/p/gwtportlets/">http://code.google.com/p/gwtportlets/</a>]]></header>
            <bottom><![CDATA[<i>Copyright &#169; 2009 <a href="http://www.bsg.co.za/web/guest/software_solutions">BSG(Africa)</a>
- Released under <a href="http://www.gnu.org/licenses/lgpl.html">LGPL license</a> - Generated ${TODAY}</i>]]></bottom>
        </javadoc>
        <zip destfile="build/javadoc.zip" basedir="build" includes="javadoc/**"/>
    </target>

    <target name="java2html" description="Generate HTML of src into demos/main"> 
        <taskdef name="java2html" classname="com.java2html.Java2HTMLTask"
                 classpathref="cp"/>
        <property name="html.src.dir" value="demos/main/war/src"/>
        <mkdir dir="${html.src.dir}"/>
        <java2html destination="${html.src.dir}" header="false" footer="false">
            <fileset dir="src" includes="**/*.java"/>
            <fileset dir="demos/main/src" includes="**/*.java"/>
        </java2html>
        <replace dir="${html.src.dir}">
            <replacetoken><![CDATA[</BODY>]]></replacetoken>
            <replacevalue><![CDATA[<BR>
                <p style="font-size:12px;color:#666666">
                // Part of <a href="http://code.google.com/p/gwtportlets/">GWT Portlets</a> @RELEASE@
                - Copyright &#169; 2009 <a href="http://www.bsg.co.za/web/guest/software_solutions">BSG(Africa)</a>
                - Released under <a href="http://www.gnu.org/licenses/lgpl.html">LGPL license</a>
                </p></BODY>]]></replacevalue>
            <replacefilter token="@RELEASE@" value="${release}"/>
        </replace>
    </target>

    <target name="manual-html" description="Generate single page HTML manual"
            depends="manual-prep">
        <java classname="com.icl.saxon.StyleSheet" fork="true" dir="doc-src"
              classpathref="cp">
            <jvmarg value="-Xmx256M"/>
            <jvmarg value="-XX:MaxPermSize=128m"/>
            <arg value="-o"/>
            <arg value="${basedir}/build/doc/manual.html"/>
            <arg value="${basedir}/build/doc/manual.xml"/>
            <arg value="${basedir}/doc-src/xsl/html.xsl"/>
        </java>
    </target>

    <target name="manual-html-chunks" description="Generate multiple page HTML manual"
            depends="manual-prep">
        <java classname="com.icl.saxon.StyleSheet" fork="true"
              dir="${basedir}/build/doc"
              classpathref="cp">
            <jvmarg value="-Xmx256M"/>
            <jvmarg value="-XX:MaxPermSize=128m"/>
            <arg value="${basedir}/build/doc/manual.xml"/>
            <arg value="${basedir}/doc-src/xsl/html_chunk.xsl"/>
        </java>
    </target>

    <!-- Generate chunked HTML for conversion to Google Code Wiki markup -->
    <target name="manual-wiki"  depends="manual-prep">
        <java classname="com.icl.saxon.StyleSheet" fork="true"
              dir="${basedir}/build/doc"
              classpathref="cp">
            <jvmarg value="-Xmx256M"/>
            <jvmarg value="-XX:MaxPermSize=128m"/>
            <arg value="${basedir}/build/doc/manual.xml"/>
            <arg value="${basedir}/doc-src/xsl/html_wiki.xsl"/>
        </java>
    </target>

    <target name="manual-pdf" description="Generate PDF manual"
            depends="manual-fo">
        <!-- You need to have Apache FOP installed for this task:
             http://xmlgraphics.apache.org/fop/download.html -->
        <available property="fop.home.exists" file="${fop.home}"/>
        <fail unless="fop.home.exists">Point fop.home at your Apache FOP installation</fail>
        <copy todir="build/doc">
            <fileset dir="doc-src" includes="img/**"/>
        </copy>
        <taskdef name="fop" classname="org.apache.fop.tools.anttasks.Fop">
            <classpath>
                <fileset dir="${fop.home}" includes="build/fop.jar,lib/*.jar"/>
            </classpath>
        </taskdef>
        <fop outdir="build/doc" relativebase="true">
            <fileset dir="build/doc" includes="manual.fo"/>
        </fop>
    </target>

    <target name="manual-prep">
        <mkdir dir="build/doc"/>
        <copy todir="build/doc" overwrite="true">
            <fileset dir="doc-src" includes="manual.xml"/>
            <filterset>
                <filter token="DATE" value="${TODAY}"/>
                <filter token="RELEASE" value="${release}"/>
            </filterset>
        </copy>
        <copy todir="build/doc">
            <fileset dir="doc-src" includes="docbook*/**"/>
        </copy>
        <copy todir="build/doc">
            <fileset dir="doc-src/xsl" includes="html.css"/>
        </copy>
    </target>

    <target name="manual-fo" depends="check-manual-fo-needed, manual-prep"
            unless="skip-manual-fo">
        <java classname="com.icl.saxon.StyleSheet" fork="true"
              dir="${basedir}/build/doc" classpathref="cp">
            <jvmarg value="-Xmx256M"/>
            <jvmarg value="-XX:MaxPermSize=128m"/>
            <arg value="-o"/>
            <arg value="${basedir}/build/doc/manual.fo"/>
            <arg value="${basedir}/build/doc/manual.xml"/>
            <arg value="${basedir}/doc-src/xsl/fopdf.xsl"/>
            <!--<arg value="double.sided=${double.sided}"/>-->
        </java>
    </target>

    <target name="check-manual-fo-needed">
        <dependset>
            <srcfileset dir="doc-src"/>
            <targetfileset dir="build/doc" includes="manual.fo"/>
        </dependset>
        <available property="skip-manual-fo" file="build/doc/manual.fo"/>
    </target>

    <target name="check-props">
        <available property="build.properties.exists" file="build.properties"/>
        <fail unless="build.properties.exists">
build.properties does not exist - please copy build.properties.sample
to build.properties and edit it to match your environment
        </fail>
        <fail message="gwt.sdk not set in build.properties">
            <condition>
                <equals arg1="${gwt.sdk}" arg2=""/>
            </condition>
        </fail>
        <available property="gwt.sdk.exists" file="${gwt.sdk}"/>
        <fail unless="gwt.sdk.exists"
              message="gwt.sdk does not exist: ${gwt.sdk}"/>
    </target>

</project>
